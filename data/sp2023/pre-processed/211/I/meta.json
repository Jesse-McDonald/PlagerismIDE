{
	InstallUUIDStack:[
		"5863e5f6-c4a4-497f-95af-dec7f3e337c1"
	],
	InfectionStack:[
		"6a604b4e-75c3-41c5-b3db-6ca9f47226d6",
		"3f938e78-4bb3-45fe-b202-a8a74ff7450f",
		"b9ea5e5e-306c-4293-bc2e-e6742c6760c3",
		"48a244dc-86a8-4445-907d-d48187722586",
		"48a244dc-8157-bbba-6f82-2c8187722586",
		"b9eda19e-306c-4293-bc2e-e6742c6760c3",
		"b9ea5e5e-306c-4173-bc2e-e6742c6760c3",
		"b9ea5e5e-306c-4293-bc2e-f98bd3989f3c",
		"b75dbb23-7957-bbba-6f82-2b7e788dda79",
		"4615a1be-306c-4293-bc2e-e6742c6760c3"
	],
	ProjectUUID:"3f938e78-4bb3-45fe-b202-a8a74ff7450f",
	CreatorUUID:"5863e5f6-c4a4-497f-95af-dec7f3e337c1",
	History:[
		{T:CwZGU=,P:0,P:"T",E:"void setu-"},
		{T:CwZHg=,P:9,P:"T",E:"\bp"},
		{T:CwZI4=,P:10,P:"T",E:"{}"},
		{T:CwZKU=,P:12,P:"T",E:"{\n    \n    "},
		{T:CwZLY=,P:19-23,P:"T",E:"\\b[19-23]}\n\n"},
		{T:CwZQE=,P:11,P:"T",E:"\b"},
		{T:CwZQM=,P:10,P:"T",E:"\b()"},
		{T:CwZSo=,P:20,P:"T",E:"\n\nvoid D"},
		{T:Cwdh4=,P:18,P:"T",E:"size()"},
		{T:CwdjE=,P:23,P:"T",E:"\b"},
		{T:CwdkY=,P:23,P:"T",E:"640, 480);\n    colorMode(RGB, 1);"},
		{T:Cwdu8=,P:77,P:"T",E:"floay"},
		{T:CwdxQ=,P:81,P:"T",E:"\bt"},
		{T:Cwejc=,P:82,P:"T",E:" ca"},
		{T:Cwemw=,P:85,P:"T",E:" ="},
		{T:Cwer4=,P:87,P:"T",E:"\n    floayt"},
		{T:Cwesw=,P:97,P:"T",E:"\b"},
		{T:Cwes4=,P:96,P:"T",E:"\bt cb ="},
		{T:CwfsU=,P:102,P:"T",E:"\n    \n    backgriyu"},
		{T:Cwftw=,P:120,P:"T",E:"\b"},
		{T:Cwft0=,P:119,P:"T",E:"\b"},
		{T:CwfuA=,P:118,P:"T",E:"\bound "},
		{T:Cwfv8=,P:122,P:"T",E:"\b*"},
		{T:Cwfwc=,P:122,P:"T",E:"\b(255);"},
		{
			T:CwgAA=,
			P:102,
			L:"P",
			E:"-0.05"
		},
		{T:CwgA0=,P:102,P:"T",E:" "},
		{T:CwgBk=,P:108,P:"T",E:";"},
		{
			T:CwgJ0=,
			P:88,
			L:"P",
			E:"0.34"
		},
		{T:CwgJg=,P:87,P:"T",E:" ;"},
		{T:CwgZY=,P:141,P:"T",E:"\n    \n    \n    "},
		{T:CwgaU=,P:155,P:"T",E:"\b"},
		{T:Cwgao=,P:154,P:"T",E:"\b"},
		{T:Cwgaw=,P:153,P:"T",E:"\b"},
		{T:Cwga4=,P:152,P:"T",E:"\b"},
		{T:CwgbE=,P:151,P:"T",E:"\bfloat w = 5;\n    float h = (w*"},
		{T:CwgkA=,P:180,P:"T",E:"\b * height) / width;"},
		{T:CwgrU=,P:199,P:"T",E:"\n    \n    float xmin = -w/2;\n    float ymin = -h/2;"},
		{T:Cwg4U=,P:250,P:"T",E:"\n    \n    loadPixels();"},
		{T:Cwg8M=,P:273,P:"T",E:"\n    \n    int maxiterations = 100l"},
		{T:CwhBM=,P:306,P:"T",E:"\b;\n    \n    float xmas"},
		{T:CwhEo=,P:326,P:"T",E:"\bx = xmin +w"},
		{T:CwhHo=,P:336,P:"T",E:"\b w;\n    "},
		{T:CwhMQ=,P:344,P:"T",E:"float ymax = ymin + h;\n    \n    float dx = (xmas"},
		{T:CwhVs=,P:391,P:"T",E:"\bx="},
		{T:CwhW0=,P:392,P:"T",E:"\b-"},
		{T:CwhYE=,P:392,P:"T",E:"\b - xmin) / (width) :"},
		{T:CwheQ=,P:411,P:"T",E:"\b"},
		{T:CwheY=,P:410,P:"T",E:"\bL"},
		{T:Cwhe4=,P:410,P:"T",E:"\b;\n    float dy = (ymax - ymin) / (height);\n    \n    "},
		{T:Cwh0A=,P:462,P:"T",E:"float y = ymin;\n    for (int j = "},
		{T:Cwh8A=,P:494,P:"T",E:"\b"},
		{T:Cwh8I=,P:493,P:"T",E:"\b"},
		{T:Cwh8Q=,P:492,P:"T",E:"\b"},
		{T:Cwh8U=,P:491,P:"T",E:"\bi = 0; i< "},
		{T:CwiAM=,P:500,P:"T",E:"\b"},
		{T:CwiAU=,P:499,P:"T",E:"\b < height; i++) {\n        "},
		{T:CwiGM=,P:525,P:"T",E:"float x = m"},
		{T:CwiI4=,P:535,P:"T",E:"\bxminl\n        "},
		{T:CwiKQ=,P:548,P:"T",E:"\b"},
		{T:CwiKY=,P:547,P:"T",E:"\b"},
		{T:CwiKs=,P:546,P:"T",E:"\b"},
		{T:CwiK0=,P:545,P:"T",E:"\b"},
		{T:CwiK8=,P:544,P:"T",E:"\b"},
		{T:CwiLE=,P:543,P:"T",E:"\b"},
		{T:CwiLM=,P:542,P:"T",E:"\b"},
		{T:CwiLU=,P:541,P:"T",E:"\b"},
		{T:CwiLg=,P:540,P:"T",E:"\b;"},
		{T:CwiL8=,P:540,P:"T",E:"\b"},
		{T:CwiME=,P:539,P:"T",E:"\b;\n        "},
		{T:CwiSY=,P:549,P:"T",E:"for (int j = 0;"},
		{T:CwiYo=,P:564,P:"T",E:" j < width; "},
		{T:Cwibo=,P:575,P:"T",E:"\b; "},
		{T:CwicQ=,P:576,P:"T",E:"\b"},
		{T:CwicY=,P:575,P:"T",E:"\b j++) {\n            "},
		{T:Cwiis=,P:595,P:"T",E:"\n            float a = x\n            float b = y"},
		{T:Cwipo=,P:619,P:"T",E:";"},
		{T:CwiqE=,P:644,P:"T",E:";\n            int n = 0;\n            while (n< max"},
		{T:Cwixw=,P:693,P:"T",E:"\b"},
		{T:Cwix4=,P:692,P:"T",E:"\b"},
		{T:CwiyA=,P:691,P:"T",E:"\b"},
		{T:CwiyE=,P:690,P:"T",E:"\b"},
		{T:CwiyM=,P:689,P:"T",E:"\b < maxiterations) P"},
		{T:Cwi1k=,P:707,P:"T",E:"\b{\n                float aa = a*"},
		{T:Cwi6g=,P:737,P:"T",E:"\b * a;\n                float bb = b * b;\n                "},
		{T:CwjGE=,P:793,P:"T",E:"float twoab"},
		{T:CwjIw=,P:804,P:"T",E:"="},
		{T:CwjI8=,P:804,P:"T",E:"\b = 2.0 * a * b;\n                a = aa - bb + x\n                "},
		{T:CwjTY=,P:867,P:"T",E:"\b"},
		{T:CwjTk=,P:866,P:"T",E:"\b"},
		{T:CwjTo=,P:865,P:"T",E:"\b"},
		{T:CwjTw=,P:864,P:"T",E:"\b"},
		{T:CwjT4=,P:863,P:"T",E:"\b"},
		{T:CwjT8=,P:862,P:"T",E:"\b"},
		{T:CwjUE=,P:861,P:"T",E:"\b"},
		{T:CwjUM=,P:860,P:"T",E:"\b"},
		{T:CwjUQ=,P:859,P:"T",E:"\b"},
		{T:CwjUY=,P:858,P:"T",E:"\b"},
		{T:CwjUg=,P:857,P:"T",E:"\b"},
		{T:CwjUk=,P:856,P:"T",E:"\b"},
		{T:CwjUs=,P:855,P:"T",E:"\b"},
		{T:CwjU4=,P:854,P:"T",E:"\b"},
		{T:CwjVA=,P:853,P:"T",E:"\b"},
		{T:CwjVM=,P:852,P:"T",E:"\b"},
		{T:CwjVY=,P:851,P:"T",E:"\b;\n                b = twoab + y;"},
		{T:CwjgE=,P:850,P:"T",E:"\bca"},
		{T:CwjhM=,P:882,P:"T",E:"\bcb"},
		{T:CwkE4=,P:885,P:"T",E:"\\"},
		{T:CwkFQ=,P:885,P:"T",E:"\b\n                n++;\n                {"},
		{T:CwkJg=,P:923,P:"T",E:"\b"},
		{T:CwkJ8=,P:907-923,P:"T",E:"            }\n            "},
		{T:CwkQg=,P:933,P:"T",E:"float"},
		{T:CwkTY=,P:938,P:"T",E:" pix "},
		{T:Cwkcc=,P:943,P:"T",E:"= "},
		{T:CwkeQ=,P:945,P:"T",E:"(j + i * width) * 4;\n            if (n"},
		{T:CwkoM=,P:982,P:"T",E:"\b"},
		{T:CwkoU=,P:981,P:"T",E:"\b(n == maxiterations) {\n                pixels[pix+0"},
		{T:Cwkzg=,P:1032,P:"T",E:"] = 0;\n                pixels"},
		{
			T:Cwk/E=,
			P:1061,
			L:"P",
			E:"[pix + 1] = 0;\n        pixels[pix + 2] = 0;\n      } else {\n        // Otherwise, use the colors that we made in setup()\n        pixels[pix + 0] = colorsRed[n];\n        pixels[pix + 1] = colorsGreen[n];\n        pixels[pix + 2] = colorsBlue[n];\n      }\n      x += dx;\n    }\n    y += dy;\n  }\n  updatePixels();\n  console.log(frameRate());\n}",
			N:"Paste from noncoded source"
		},
		{T:CwlBA=,P:1398,P:"T",E:"\b"},
		{T:CwlDo=,P:1084,P:"T",E:"		"},
		{T:CwlHM=,P:1030,P:"T",E:" "},
		{T:CwlIA=,P:1032,P:"T",E:" "},
		{T:CwlW8=,P:1117,P:"T",E:"\n      "},
		{T:CwlZc=,P:1139-1191,P:"T",E:"\\b[1139-1191]"},
		{T:CwlhE=,P:1277,P:"T",E:"\bca"},
		{T:Cwlic=,P:1297,P:"T",E:"\bcb"},
		{T:Cwl1c=,P:885,P:"T",E:"\n                \n                if (aa + bb "},
		{T:Cwl70=,P:931,P:"T",E:"> 16.0) {\n                    n"},
		{T:CwmAY=,P:961,P:"T",E:"\bbreak;"},
		{T:CwmDE=,P:967,P:"T",E:"\n                    "},
		{T:CwmDQ=,P:968-988,P:"T",E:"                }"},
		{T:CwmIc=,P:1033-1065,P:"T",E:"\\b[1033-1065]"},
		{T:CwmPM=,P:1087-1176,P:"T",E:"\\b[1087-1176]"},
		{T:CwmQ0=,P:1087,P:"T",E:"puix"},
		{T:CwmRc=,P:1090,P:"T",E:"\b"},
		{T:CwmRk=,P:1089,P:"T",E:"\b"},
		{T:CwmRw=,P:1088,P:"T",E:"\bixels[j+i"},
		{T:CwmXE=,P:1097,P:"T",E:"*width] = color(0);"},
		{T:Cwmfs=,P:1138,P:"T",E:"\n          "},
		{T:CwmhA=,P:1149,P:"T",E:"p"},
		{T:CwmiM=,P:1123,P:"T",E:"		"},
		{T:CwmkA=,P:1134,P:"T",E:"		"},
		{T:CwmpE=,P:1153,P:"T",E:"\b"},
		{T:CwmpM=,P:1152,P:"T",E:"\b"},
		{T:CwmpU=,P:1151,P:"T",E:"\b"},
		{T:Cwmpc=,P:1150,P:"T",E:"\b"},
		{T:Cwmpo=,P:1149,P:"T",E:"\b"},
		{T:Cwmpw=,P:1148,P:"T",E:"\b"},
		{T:Cwmp4=,P:1147,P:"T",E:"\b"},
		{T:CwmqA=,P:1146,P:"T",E:"\b"},
		{T:CwmqI=,P:1145,P:"T",E:"\b"},
		{T:CwmqU=,P:1144,P:"T",E:"\b"},
		{T:Cwmqc=,P:1143,P:"T",E:"\b"},
		{T:Cwmqk=,P:1142,P:"T",E:"\b\n          d"},
		{T:CwmsQ=,P:1153,P:"T",E:"\b	"},
		{T:Cwmu0=,P:1154,P:"T",E:"pixels"},
		{T:Cwmvg=,P:1159,P:"T",E:"\b"},
		{T:Cwmvo=,P:1158,P:"T",E:"\b"},
		{T:Cwmvs=,P:1157,P:"T",E:"\b"},
		{T:Cwmv0=,P:1156,P:"T",E:"\b"},
		{T:Cwmv8=,P:1155,P:"T",E:"\b"},
		{T:CwmwA=,P:1154,P:"T",E:"\b	pixels"},
		{T:Cwmy0=,P:1135,P:"T",E:"\b		"},
		{T:Cwm1s=,P:1136,P:"T",E:"\b"},
		{T:Cwm6E=,P:1161,P:"T",E:"["},
		{T:Cwm7c=,P:1162,P:"T",E:"j+i*wid"},
		{T:Cwm9U=,P:1168,P:"T",E:"\b"},
		{T:Cwm9c=,P:1167,P:"T",E:"\bit"},
		{T:Cwm+g=,P:1168,P:"T",E:"\bdth]"},
		{T:CwnAw=,P:1172,P:"T",E:" = color(sqrt(float(n) / max"},
		{T:CwnNE=,P:1200,P:"T",E:"itye"},
		{T:CwnNw=,P:1203,P:"T",E:"\b"},
		{T:CwnN4=,P:1202,P:"T",E:"\berationsl"},
		{T:CwnPo=,P:1210,P:"T",E:"\b;"},
		{T:CwnR0=,P:1210,P:"T",E:"\b));"},
		{T:CwnjY=,P:919-985,P:"C",E:"if (aa + bb > 16.0) {\n                    break;\n                }"},
		{
			T:Cwnow=,
			P:793,
			L:"P",
			E:"if (aa + bb > 16.0) {\n                    break;\n                }",
			N:"paste from project on same machine;Paste from project with UUID fragment 3f800000-0000-0000-0000-000000000000 -1 bytes long;"
		},
		{T:Cwnoc=,P:776,P:"T",E:"\n                "},
		{T:CwnqE=,P:1002-1068,P:"T",E:"\\b[1002-1068]"},
		{T:CwnqQ=,P:1001,P:"T",E:"\b"},
		{T:Cwnqc=,P:1000,P:"T",E:"\b"},
		{T:Cwnqk=,P:999,P:"T",E:"\b"},
		{T:Cwnqs=,P:998,P:"T",E:"\b"},
		{T:Cwnq0=,P:997,P:"T",E:"\b"},
		{T:CwnrI=,P:996,P:"T",E:"\b"},
		{T:CwnrI=,P:995,P:"T",E:"\b"},
		{T:CwnrI=,P:994,P:"T",E:"\b"},
		{T:CwnrM=,P:993,P:"T",E:"\b"},
		{T:CwnrM=,P:992,P:"T",E:"\b"},
		{T:CwnrM=,P:991,P:"T",E:"\b"},
		{T:CwnrQ=,P:990,P:"T",E:"\b"},
		{T:CwnrY=,P:989,P:"T",E:"\b"},
		{T:Cwnrg=,P:988,P:"T",E:"\b"},
		{T:Cwnro=,P:987,P:"T",E:"\b"},
		{T:Cwnrw=,P:986,P:"T",E:"\b"},
		{T:Cwnr8=,P:985,P:"T",E:"\b"},
		{T:CwoL4=,P:1222-1345,P:"T",E:"\\b[1222-1345]"},
		{T:CwoMY=,P:1221,P:"T",E:"\b"},
		{T:CwoMs=,P:1220,P:"T",E:"\b"},
		{T:CwoM8=,P:1219,P:"T",E:"\b"},
		{T:CwoNE=,P:1218,P:"T",E:"\b"},
		{T:CwoNM=,P:1217,P:"T",E:"\b"},
		{T:CwoNU=,P:1216,P:"T",E:"\b"},
		{T:CwoNc=,P:1215,P:"T",E:"\b"},
		{T:CwoNk=,P:1214,P:"T",E:"\b"},
		{T:CwoN0=,P:1213,P:"T",E:"\b"},
		{T:CwoUA=,P:1282-1307,P:"T",E:"\\b[1282-1307]"},
		{T:CwoUQ=,P:1281,P:"T",E:"\b"},
		{T:CwoUg=,P:1280,P:"T",E:"\b"},
		{T:CwoUs=,P:1279,P:"T",E:"\b"},
		{T:CwqYY=,P:1229,P:"T",E:"\b"},
		{T:CwqYg=,P:1228,P:"T",E:"\bx"},
		{T:CwqZw=,P:1248,P:"T",E:"\b"},
		{T:CwqZ0=,P:1247,P:"T",E:"\by"},
		{T:CwqcE=,P:966,P:"T",E:"\b"},
		{T:CwqcM=,P:965,P:"T",E:"\b"},
		{T:CwqdE=,P:934,P:"T",E:"\b"},
		{T:CwqdM=,P:933,P:"T",E:"\b"},
		{T:Cwqio=,P:88-92,P:"C",E:"0.34"},
		{
			T:Cwqj8=,
			P:933-935,
			L:"P",
			E:"0.34"
		},
		{T:CwqmM=,P:109-114,P:"C",E:"-0.05"},
		{
			T:CwqoE=,
			P:965,
			L:"P",
			E:"-0.05"
		},
		{T:Cwqn4=,P:965,P:"T",E:"\b"},
		{T:CwqqE=,P:76-115,P:"T",E:"\\b[76-115]"},
		{T:Cwrf8=,P:754-820,P:"C",E:"if (aa + bb > 16.0) {\n                    break;\n                }"},
		{
			T:Cwrig=,
			P:950,
			L:"P",
			E:"if (aa + bb > 16.0) {\n                    break;\n                }",
			N:"paste from project on same machine;Paste from project with UUID fragment 3f800000-0000-0000-0000-000000000000 -1 bytes long;"
		},
		{T:Cwrjs=,P:754-820,P:"T",E:"\\b[754-820]"},
		{T:Cwr3A=,P:1242,P:"T",E:"\n  println(frameRate);"},
		{T:CwuBY=,P:1120-1178,P:"T",E:"\\b[1120-1178]float hu = sqrt(float(n) / maxI"},
		{T:CwuJ8=,P:1150,P:"T",E:"\biterations) ;"},
		{T:CwuMs=,P:1162,P:"T",E:"\b"},
		{T:CwuM0=,P:1161,P:"T",E:"\b;\n          ["},
		{T:CwuOo=,P:1173,P:"T",E:"\b		pixels[j+i*width] = color(hu, 255,255);"},
		{T:Cwuko=,P:99,P:"T",E:"\b"},
		{T:Cwukw=,P:98,P:"T",E:"\b26"},
		{T:CwupU=,P:98,P:"T",E:"1"},
		{T:Cwup4=,P:98,P:"T",E:"\b"},
		{T:Cwup8=,P:97,P:"T",E:"\b1"},
		{T:CwuuE=,P:97-100,P:"T",E:"255"},
		{T:CwvZc=,P:828-832,P:"T",E:"\\b[828-832]"},
		{T:CwvjI=,P:828,P:"T",E:".45"},
		{T:Cwvkc=,P:863,P:"T",E:"\b"},
		{T:Cwvkk=,P:862,P:"T",E:"\b"},
		{T:Cwvks=,P:861,P:"T",E:"\b"},
		{T:Cwvkw=,P:860,P:"T",E:"\b "},
		{T:Cwvl8=,P:860,P:"T",E:"\b"},
		{T:CwvmA=,P:859,P:"T",E:"\b+ "},
		{T:Cwvow=,P:861,P:"T",E:".1428"},
		{T:Cwvsk=,P:860-861,P:"T",E:"0"},
		{T:Cwvtc=,P:828,P:"T",E:"0"},
		{T:Cwvuc=,P:861,P:"T",E:" "},
		{T:CwwG4=,P:50,P:"T",E:"\b"},
		{T:CwwHA=,P:49,P:"T",E:"\b"},
		{T:CwwHE=,P:48,P:"T",E:"\bHSVB"},
		{T:CwwH0=,P:51,P:"T",E:"\b"},
		{T:CwwH4=,P:50,P:"T",E:"\bB"},
		{T:CwwwQ=,P:30,P:"T",E:"\b"},
		{T:CwwwY=,P:29,P:"T",E:"\b"},
		{T:Cwwwc=,P:28,P:"T",E:"\b360"},
		{
			T:Cwy2E=,
			P:0-1307,
			L:"P",
			E:"float angle = 0;\n\nfinal int maxiterations = 100;\n\nint[] colorsRed = new int[maxiterations];\nint[] colorsGreen = new int[maxiterations];\nint[] colorsBlue = new int[maxiterations];\n\nvoid setup() {\n  pixelDensity(1);\n  size(640, 360);\n  colorMode(HSB, 1);\n\n  for (int n = 0; n < maxiterations; n++) {\n\n    float hu = sqrt(n / (float)maxiterations);\n    int col = color(hu, 1, 0.59);\n    colorsRed[n] = red(col);\n    colorsGreen[n] = green(col);\n    colorsBlue[n] = blue(col);\n  }\n}\n\nvoid draw() {\n\n  float ca = cos(angle * 3.213); //sin(angle);\n  float cb = sin(angle);\n\n  angle += 0.02;\n\n  background(255);\n\n  float w = 5;\n  float h = (w * height) / width;\n\n  float xmin = -w / 2;\n  float ymin = -h / 2;\n\n  loadPixels();\n\n  float xmax = xmin + w;\n\n  float ymax = ymin + h;\n\n  float dx = (xmax - xmin) / width;\n  float dy = (ymax - ymin) / height;\n\n  float y = ymin;\n  for (int j = 0; j < height; j++) {\n    float x = xmin;\n    for (int i = 0; i < width; i++) {\n\n      float a = x;\n      float b = y;\n      int n = 0;\n      while (n < maxiterations) {\n        float aa = a * a;\n        float bb = b * b;\n\n        if (aa + bb > 4.0) {\n          break;\n        }\n        float twoab = 2.0 * a * b;\n        a = aa - bb + ca;\n        b = twoab + cb;\n        n++;\n      }\n\n      int pix = (i + j * width) * 4;\n      if (n == maxiterations) {\n        pixels[pix + 0] = 0;\n        pixels[pix + 1] = 0;\n        pixels[pix + 2] = 0;\n      } else {\n        pixels[pix + 0] = colorsRed[n];\n        pixels[pix + 1] = colorsGreen[n];\n        pixels[pix + 2] = colorsBlue[n];\n      }\n      x += dx;\n    }\n    y += dy;\n  }\n  updatePixels();\n  println(frameRate);\n}",
			N:"Paste from noncoded source"
		},
		{T:CwzHo=,P:261-264,P:"T",E:"float"},
		{T:CwzL8=,P:261-266,P:"T",E:"int"},
		{T:CwzyI=,P:350-353,P:"T",E:"color"},
		{
			T:Cwz/4=,
			P:0,
			L:"P",
			E:"float angle = 0;\n\nfinal int maxiterations = 100;\n\nfinal int[] colorsRed = new int[maxiterations];\nfinal int[] colorsGreen = new int[maxiterations];\nfinal int[] colorsBlue = new int[maxiterations];\n\nvoid setup() {\n  pixelDensity(1);\n  size(640, 360);\n  colorMode(HSB, 1);\n\n  for (int n = 0; n < maxiterations; n++) {\n    float hu = sqrt(n / float(maxiterations));\n    color col = color(hu, 255, 150);\n    colorsRed[n] = red(col);\n    colorsGreen[n] = green(col);\n    colorsBlue[n] = blue(col);\n  }\n}\n\nvoid draw() {\n  float ca = cos(angle * 3.213); //sin(angle);\n  float cb = sin(angle);\n\n  angle += 0.02;\n\n  background(255);\n\n  float w = 5;\n  float h = (w * height) / width;\n\n  float xmin = -w / 2;\n  float ymin = -h / 2;\n\n  loadPixels();\n\n  float xmax = xmin + w;\n  float ymax = ymin + h;\n\n  float dx = (xmax - xmin) / width;\n  float dy = (ymax - ymin) / height;\n\n  float y = ymin;\n  for (int j = 0; j < height; j++) {\n    float x = xmin;\n    for (int i = 0; i < width; i++) {\n      float a = x;\n      float b = y;\n      int n = 0;\n      while (n < maxiterations) {\n        float aa = a * a;\n        float bb = b * b;\n\n        if (aa + bb > 4.0) {\n          break;\n        }\n        float twoab = 2.0 * a * b;\n        a = aa - bb + ca;\n        b = twoab + cb;\n        n++;\n      }\n\n      int pix = (i + j * width) * 4;\n      if (n == maxiterations) {\n        pixels[pix + 0] = 0;\n        pixels[pix + 1] = 0;\n        pixels[pix + 2] = 0;\n      } else {\n        pixels[pix + 0] = colorsRed[n];\n        pixels[pix + 1] = colorsGreen[n];\n        pixels[pix + 2] = colorsBlue[n];\n      }\n      x += dx;\n    }\n    y += dy;\n  }\n  updatePixels();\n  println(frameRate);\n}",
			N:"Paste from noncoded source"
		},
		{T:Cwz/k=,P:0-1649,P:"T",E:"\\b[0-1649]"},
		{T:Cw0Hs=,P:274-498,P:"T",E:"\\b[274-498]"},
		{T:Cw0I8=,P:273,P:"T",E:"\b"},
		{T:Cw0JQ=,P:272,P:"T",E:"\b"},
		{T:Cw0KA=,P:271,P:"T",E:"\b"},
		{T:Cw0Qk=,P:1436,P:"T",E:"\n\\b[1437-1437]}"},
		{T:Cw0Rs=,P:1437,P:"T",E:"\b"},
		{T:Cw0Ww=,P:271,P:"T",E:"\\b[271-271]}"},
		{
			T:Cw1hY=,
			P:0,
			L:"P",
			E:"let angle = 0;\n\nconst maxiterations = 100;\n\nconst colorsRed = [];\nconst colorsGreen = [];\nconst colorsBlue = [];\n\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(640, 360);\n  colorMode(HSB, 1);\n\n \n  for (let n = 0; n < maxiterations; n++) {\n    \n    let hu = sqrt(n / maxiterations);\n    let col = color(hu, 255, 150);\n    colorsRed[n] = red(col);\n    colorsGreen[n] = green(col);\n    colorsBlue[n] = blue(col);\n  }\n}\n\nfunction draw() {\n  \n  let ca = cos(angle * 3.213); //sin(angle);\n  let cb = sin(angle);\n\n  angle += 0.02;\n\n  background(255);\n\n  \n  let w = 5;\n  let h = (w * height) / width;\n\n  \n  let xmin = -w / 2;\n  let ymin = -h / 2;\n\n  loadPixels();\n\n  \n  let xmax = xmin + w;\n  \n  let ymax = ymin + h;\n\n  \n  let dx = (xmax - xmin) / width;\n  let dy = (ymax - ymin) / height;\n\n  let y = ymin;\n  for (let j = 0; j < height; j++) {\n    let x = xmin;\n    for (let i = 0; i < width; i++) {\n      \n      let a = x;\n      let b = y;\n      let n = 0;\n      while (n < maxiterations) {\n        let aa = a * a;\n        let bb = b * b;\n        \n        if (aa + bb > 4.0) {\n          break; \n        }\n        let twoab = 2.0 * a * b;\n        a = aa - bb + ca;\n        b = twoab + cb;\n        n++;\n      }\n\n      \n      let pix = (i + j * width) * 4;\n      if (n == maxiterations) {\n        pixels[pix + 0] = 0;\n        pixels[pix + 1] = 0;\n        pixels[pix + 2] = 0;\n      } else {\n        pixels[pix + 0] = colorsRed[n];\n        pixels[pix + 1] = colorsGreen[n];\n        pixels[pix + 2] = colorsBlue[n];\n      }\n      x += dx;\n    }\n    y += dy;\n  }\n  updatePixels();\n  console.log(frameRate());\n}",
			N:"Paste from noncoded source"
		},
		{T:Cw1hA=,P:0-1437,P:"T",E:"\\b[0-1437]"},
		{T:Cw1pM=,P:0-3,P:"T",E:"float"},
		{T:Cw2y8=,P:0-1607,P:"T",E:"\\b[0-1607]"},
		{
			T:Cw2/I=,
			P:0,
			L:"P",
			E:"float minval = -0.5;\nfloat maxval = 0.5;\n\nSlider minSlider;\nSlider maxSlider;\n\nDiv frDiv;\n\nvoid setup() {\n  size(200, 200);\n  pixelDensity(1);\n\n  minSlider = new Slider(-2.5, 0, -2.5, 0.01);\n  maxSlider = new Slider(0, 2.5, 2.5, 0.01);\n\n  frDiv = new Div(\"\");\n}\n\nvoid draw() {\n  int maxiterations = 100;\n\n  loadPixels();\n  for (int x = 0; x < width; x++) {\n    for (int y = 0; y < height; y++) {\n\n      float a = map(x, 0, width, minSlider.getValue(), maxSlider.getValue());\n      float b = map(y, 0, height, minSlider.getValue(), maxSlider.getValue());\n\n      float ca = a;\n      float cb = b;\n\n      int n = 0;\n\n      while (n < maxiterations) {\n        float aa = a * a - b * b;\n        float bb = 2 * a * b;\n        a = aa + ca;\n        b = bb + cb;\n        if (a * a + b * b > 16) {\n          break;\n        }\n        n++;\n      }\n\n      float bright = map(n, 0, maxiterations, 0, 1);\n      bright = map(sqrt(bright), 0, 1, 0, 255);\n\n      if (n == maxiterations) {\n        bright = 0;\n      }\n\n      int pix = (x + y * width) * 4;\n      pixels[pix + 0]}